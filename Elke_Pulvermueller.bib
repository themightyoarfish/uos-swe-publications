@InProceedings{	  speck.witt.ea:integrating,
  author	= {Speck, Andreas and Witt, S{\"o}ren and Feja, Sven and
		  Feja, S{\"{o}}ren and Pulverm{\"u}ller, Elke},
  title		= {Integrating Validation Techniques for Process-based
		  Models},
  booktitle	= {Proceedings of the Eighth International Conference on
		  Evaluation of Novel Approaches to Software Engineering
		  (ENASE 2013)},
  publisher	= {SciTePress},
  month		= {July},
  year		= {2013},
  pages		= {246 -- 253},
  location	= {Angers, France},
  mytype	= {CONFERENCE},
  abstract	= {Model checking has been established as an appropriate
		  technology to validate behavioral properties of (business)
		  process based systems. However, further validation
		  technologies (e. g. for structural properties) may be of
		  interest for process models. We propose a concept to
		  integrate validation technologies in a unique system with a
		  common user interface.},
  language	= {English},
  url_home  = {}
}

@InProceedings{	  pulvermuller.speck.ea:dependencies,
  author	= {Pulverm{\"u}ller, Elke and Speck, Andreas and Feja, Sven
		  and Witt, S{\"o}ren},
  title		= {Dependencies in Business Process Rule Hierarchies},
  booktitle	= {Proceedings of the 12th IEEE International Conference on
		  Intelligent Software Methodologies, Tools and Techniques
		  (SoMeT_2013)},
  publisher	= {IEEE Computer Society Press},
  month		= {September},
  year		= {2013},
  pages		= {203 -- 207},
  location	= {Budapest, Hungary},
  mytype	= {CONFERENCE},
  abstract	= {Automated checking concepts for business process models
		  support human testers considerably by saving time. However,
		  this new checking ability results in a comparatively large
		  number of rules representing requirements. But without a
		  comprehensible representation of the relations between the
		  rules on the one hand its hard to keep track on the
		  validated rules and on the other hand to correctly
		  interpret the validation results. In this paper we propose
		  an improvement for the automated validation of business
		  process models by offering elements to create abstract
		  rules and arranging these rules in hierarchies. Top-down
		  and bottom-up testing are supported by stepwise activating
		  (and validating) the rules starting from the top of the
		  hierarchy (or bottom respectively). Moreover, the rule
		  hierarchies may be reused when similar systems are to be
		  validated by configuring a valid rule sub-set for the
		  specific business process system.},
  language	= {English},
  url_home	= {http://dx.doi.org/10.1109/SoMeT.2013.6645663}
}


@InProceedings{	  ammann.kleuker.ea:from,
  author	= {Ammann, Christian and Kleuker, Stephan and
		  Pulverm{\"u}ller, Elke},
  title		= {From Business Modeling to Verified Applications},
  booktitle	= {Proceedings of the Workshop "Protokoll-basierte
		  Modellierung von Gesch{\"a}ftsinteraktionen" (PMBI) at
		  INFORMATIK 2011, 41. Jahrestagung der Gesellschaft f{\"u}r
		  Informatik},
  editor	= {Hei\ss, Hans-Ulrich and Pepper, Peter and Schlingloff,
		  Holger and Schneider, J{\"o}rg},
  series	= {Lecture Nodes in Informatics (LNI)},
  volume	= {P-192},
  pages		= {312},
  month		= {October},
  year		= {2011},
  publisher	= {GI-Edition},
  location	= {Berlin, Germany},
  mytype	= {WORKSHOP},
  abstract	= {UML activity diagrams can be used to model business
		  processes which are implemented in a software project. It
		  is a worthwhile goal to automatically transform at least
		  parts of UML diagrams into software. Automated code
		  generation reduces the total amount of errors in a software
		  project but the model itself can still violate specified
		  requirements. A quality improvement is the usage of a model
		  checker which searches through the whole state space of
		  model and checks whether all requirements are met. A model
		  checker requires a formal description of a model for a
		  complete verification. Activity diagrams often describe
		  processes informally which is difficult to verify with a
		  model checker. We therefore propose the transformation of
		  activity to statechart diagrams which allow a more detailed
		  and formal description. Several algorithms exist to map UML
		  statecharts into a model checker input language for a
		  successful formal verification. Afterwards, the model
		  checker searches through the whole state space of a
		  statechart and therefore has to store each state in memory.
		  UML statecharts can reach a high degree of complexity which
		  is problematic for a complete state space traversal because
		  the total amount of available memory is exhausted.
		  Accordingly, we present the domain specific language UDL
		  (UML Statechart Modeling Language) and a transformation
		  from UDL into the Spin model checker input language
		  Promela. UDL contains features for property preserving
		  abstraction which reduces the models state space and
		  therefore the memory consumption of a model checker.
		  Furthermore, we introduce an optimisation technique for the
		  transformation process from UDL to Promela which focuses on
		  a reduced model checker run-time. A case study with a
		  movement tracking system demonstrates how our approach
		  could significantly reduce the memory consumption of a
		  model checker and allows the verification of complex
		  models.},
  language	= {English},
  url_home	= {https://pdfs.semanticscholar.org/ae84/cfe007b85a2767fdd9db69ac3e147f8322cd.pdf}
}

@InProceedings{	  brichau.costanza.ea:context-dependent,
  author	= {Brichau, Johan and Costanza, Pascal and Kiczales, Gregor
		  and Pulverm{\"u}ller, Elke and Steyaert, Patrick and
		  Tourwe, Tom},
  title		= {{C}ontext-{D}ependent {S}pecialization of {E}xisting
		  {B}ehavior, {C}hapter 7 of: {W}orkshop on {A}spects and
		  {D}imensions of {C}oncern: {R}equirements on, and
		  {C}hallenge {P}roblems for, {A}dvanced {S}eparation of
		  {C}oncerns},
  booktitle	= {ECOOP 2000 Workshop Reader},
  subtitle	= {ADC 2000 (in conjunction with ECOOP 2000)},
  series	= {Lecture Notes in Computer Science (LNCS)},
  volume	= {1964},
  pages		= {230 -- 234},
  month		= {June},
  year		= {2000},
  publisher	= {Springer},
  location	= {Sophia Antipolis and Cannes, France},
  mytype	= {OTHER},
  language	= {English},
  url_home	= {}
}

@Article{	  costanza.kniesel.ea:konferenzankundigung,
  author	= {Costanza, Pascal and Kniesel, G{\"u}nter and Mehner,
		  Katharina and Pulverm{\"u}ller, Elke and Speck, Andreas},
  title		= {{K}onferenzank{\"u}ndigung f{\"u}r den {W}orkshop
		  {A}spektorientierte {S}oftwareentwicklung},
  journal	= {Softwaretechnik-Trends STT},
  volume	= {22},
  number	= {1},
  month		= {November},
  year		= {2001},
  language	= {German},
  mytype	= {OTHER},
  url_home	= {}
}

@TechReport{	  costanza.kniesel.ea:second,
  author	= {Costanza, Pascal and Kniesel, G{\"u}nter and Mehner,
		  Katharina and Pulverm{\"u}ller, Elke and Speck, Andreas},
  title		= {{S}econd {G}erman {W}orkshop on {A}spect-{O}riented
		  {S}oftware {D}evelopment.},
  month		= {February},
  year		= {2002},
  institution	= {Rheinische Friedrich-Wilhelms-Universit{\"a}t Bonn,
		  Institut f{\"u}r Informatik III},
  number	= {IAI-TR-2002-1},
  mytype	= {TECHNICALREPORT},
  abstract	= {This Technical Report collects all accepted contributions
		  of the Workshop on Aspect-Oriented Software Development,
		  held at Bonn (February 21-22, 2002). The Workshop web page
		  may be found at URL:
		  http://www.info.uni-karlsruhe.de/~pulvermu/workshops/aosd2002/
		  Modularisation as a means to achieve separation of concerns
		  is a key concept in the development of complex software. A
		  fundamental goal is the independent specification of system
		  aspects and their subsequent integration. There have been
		  several novel approaches which try to find new dimensions
		  for separation of concerns beyond the "traditional"
		  concepts of module and class. For examples of such
		  "advanced separation of concerns" we cite Adaptive
		  Programming, Aspect-Oriented Programming, Composition
		  Filters, Hyperspaces, role modeling, Subject-Oriented
		  Programming, and so on. Recently such approaches have been
		  subsumed under the umbrella term Aspect-Oriented Software
		  Development (AOSD), whose themes, in addition to
		  programming language extensions, also encompass
		  enhancements of traditional analysis and design
		  methodologies. Such a new and emerging field has yet to
		  garner a uniform conception of its scope and a definition
		  of its central terms. After the success of the first
		  workshop by the GI on this topic, and in the run-up to the
		  1st International Conference on Aspect-Oriented Software
		  Development (April, 23-26, 2002), the aim of this workshop
		  is again to provide room for fruitful discussions among
		  various academic and industrial working groups who are
		  involved with issues of aspect-oriented software
		  development and related themes. We have accepted 11 papers
		  for this year's workshop whose topics cover a broad range
		  from theoretical reasoning about aspect-oriented systems to
		  practical applications thereof. They are all included in
		  this technical report. },
  language	= {English},
  url_home	= {}
}

@Article{	  costanza.kniesel.ea:tagungsbericht,
  author	= {Costanza, Pascal and Kniesel, G{\"u}nter and Mehner,
		  Katharina and Pulverm{\"u}ller, Elke},
  title		= {{T}agungsbericht f{\"u}r den {W}orkshop
		  {A}spektorientierung},
  journal	= {Softwaretechnik-Trends STT},
  volume	= {21},
  number	= {2},
  month		= {August},
  year		= {2001},
  language	= {German},
  mytype	= {OTHER},
  url_home	= {}
}

@Article{	  decreus.poels.ea:policy-enabled,
  author	= {Decreus, Ken and Poels, Geert and El Kharbili, Marwane and
		  Pulverm{\"u}ller, Elke},
  title		= {Policy-Enabled Goal-Oriented Requirements Engineering for
		  Semantic Business Process Management.},
  journal	= {International Journal of Intelligent Systems (IJIS),
		  Special Issue: Goal-driven Requirements Engineering},
  editor	= {Lee, Jonathan and Lee, Wen-Tin},
  year		= {2010},
  volume	= {25},
  number	= {8},
  pages		= {784 -- 812},
  month		= {August},
  publisher	= {Wiley Periodicals, Inc.},
  mytype	= {JOURNAL},
  abstract	= {Business Process Management is a paradigm for enterprise
		  computing that uses IT not only to support or execute
		  business processes but also to continuously monitor and
		  improve these processes to better achieve business
		  objectives. A variant on Business Process Management,
		  called Semantic Business Process Management, is meant to
		  further close the gap between business and IT by attaching
		  business semantics to the technology artifacts used for
		  Business Process Management. A current problem in Semantic
		  Business Process Management is that the specification of
		  the business requirements that processes must respond to
		  and that follow from the enterprise's strategic decisions,
		  is not fully integrated within the design of the processes
		  themselves. In this paper, we propose an approach in which
		  business requirements for business processes are formally
		  modeled and the skeleton of the designs of these business
		  processes is automatically generated from these models. The
		  approach presented here focuses upon the modeling of
		  policies (i.e., a kind of business requirements for
		  business processes) and on the subsequent design of
		  business processes that comply to these policies. A first
		  contribution is extending an existing goal-oriented
		  requirements specification language, i.e. Formal Tropos, to
		  incorporate policies, called Policy-extended Formal Tropos.
		  A second contribution is offering an automated
		  transformation to create business process design skeletons
		  out of the Policy-extended Formal Tropos models. The paper
		  also reports upon three pilot studies that were conducted
		  as a first, though preliminary, empirical test of our
		  approach.},
  language	= {English},
  url_home	= {http://dx.doi.org/10.1002/int.20431}
}

@InProceedings{	  el-kharbili.ma.ea:corel,
  author	= {El Kharbili, Marwane and Ma, Qin and Kelsen, Pierre and
		  Pulverm{\"u}ller, Elke},
  title		= {CoReL: Policy-Based and Model-Driven Regulatory Compliance
		  Management.},
  booktitle	= {Proceedings of the 15th IEEE International Enterprise
		  Distributed Object Computing Conference (EDOC)},
  pages		= {247 -- 256},
  month		= {September},
  year		= {2011},
  publisher	= {IEEE Computer Society Press},
  location	= {Helsinki, Finland },
  mytype	= {CONFERENCE},
  abstract	= {Regulatory compliance management is now widely recognized
		  as one of the main challenges still to be efficiently dealt
		  with in information systems. In the discipline of business
		  process management in particular, compliance is considered
		  as an important driver of the efficiency, reliability and
		  market value of companies. It consists of ensuring that
		  enterprise systems behave according to some guidance
		  provided in the form of regulations. This paper gives a
		  definition of the research problem of regulatory
		  compliance. We show why we expect a formal policy-based and
		  model-driven approach to provide significant advantages in
		  allowing enterprises to flexibly manage decision-making
		  related to regulatory compliance. For this purpose, we
		  contribute CoReL, a domain-specific modeling language for
		  representing compliance requirements that has a graphical
		  concrete syntax. Informal semantics of CoReL are introduced
		  and its use is illustrated on an example. CoReL allows to
		  leverage business process compliance modeling and checking,
		  enhancing it with regard to, among other dimensions,
		  user-friendliness, genericity, and traceability.},
  language	= {English},
  url_home	= {http://dx.doi.org/10.1109/EDOC.2011.23}
}

@InProceedings{	  el-kharbili.ma.ea:enterprise,
  author	= {El Kharbili, Marwane and Ma, Qin and Kelsen, Pierre and
		  Pulverm{\"u}ller, Elke},
  title		= {Enterprise Regulatory Compliance Modeling using CoReL: An
		  illustrative Example.},
  booktitle	= {Proceedings of the 13th IEEE Conference on Commerce and
		  Enterprise Computing (CEC)},
  pages		= {185 -- 190},
  month		= {September},
  year		= {2011},
  publisher	= {IEEE Computer Society Press},
  location	= {Luxembourg, Luxembourg},
  mytype	= {CONFERENCE},
  abstract	= {Regulatory compliance management is a critical and
		  challenging task, especially in the context of Business
		  Process Management. It requires a comprehensive framework
		  for dealing with compliance requirements: elicitation,
		  modeling, static and dynamic checking and reporting. We
		  previously defined CoReL, a domain specific language for
		  the domain of compliance decision-making. This paper shows
		  how CoReL can be used to model compliance requirements
		  using an illustrative example. In particular, we show how
		  CoReL's agnosticism of logical formalisms and coverage of
		  enterprise business aspects leverages the task of
		  compliance modeling to the business user level.},
  language	= {English},
  url_home	= {http://dx.doi.org/10.1109/CEC.2011.39}
}

@InBook{	  el-kharbili.pulvermuller:in,
  author	= {El Kharbili, Marwane and Pulverm{\"u}ller, Elke},
  chapter	= {16: Semantic Policies for Modeling Regulatory Process
		  Compliance},
  title		= {In: Semantic Technologies for Business and Information
		  Systems Engineering: Concepts and Applications},
  editor	= {Smolnik, Stefan and Teuteberg, Frank and Thomas, Oliver},
  pages		= {311 -- 336},
  year		= {2011},
  month		= {October/December},
  publisher	= {IGI Global},
  language	= {English},
  mytype	= {CHAPTER},
  abstract	= {Business process management (BPM) as a paradigm for
		  enterprise planning and governance is nowadays a core
		  discipline of information systems management. Growing up
		  from the first process re-engineering initiatives in the
		  1980's, BPM technologies now seek to span all of the
		  organizational silos of enterprises, and also expand
		  vertically from the strategy layers where visions and goals
		  are defined to the lower data transaction layers. Ensuring
		  the compliance of processes to the guidance and control
		  provided to the business by regulations is an obligation to
		  every enterprise. In this work, we motivate the need for
		  automation in compliance management and propose the use of
		  policies as a modeling concept for regulations. We
		  introduce the CASE model for structuring regulatory
		  compliance requirements as policies. Policies shall allow
		  to model regulations at abstraction levels adequate to
		  implementing platform independent mechanisms for policy
		  verification. We describe the CASE model and explain how it
		  can be used to structure and model policies extracted from
		  regulations. This chapter also defines a policy modeling
		  ontology that we propose as a language for formally
		  modeling CASE policies. The basic CASE model and the
		  corresponding policy modeling ontology support compliance
		  of enterprise processes to regulations by enabling
		  automation to compliance checking (verification). The
		  utilization of the CASE method as well as the policy
		  ontology is showcased using an example of resource access
		  control in business processes.},
  url_home	= {http://www.igi-global.com/chapter/semantic-policies-modeling-regulatory-process/60068}
}

@InProceedings{	  el-kharbili.pulvermuller:service,
  author	= {El Kharbili, Marwane and Pulverm{\"u}ller, Elke},
  title		= {Service Contract Compliance Management in Business Process
		  Management},
  booktitle	= {Post-Proceedings of the 3rd Workshop on Emerging Web
		  Services Technology (WEWST 2008), Emerging Web Services
		  Technology Volume III},
  series	= {Whitestein Series in Software Agent Technologies and
		  Autonomic Computing},
  editor	= {Binder, Walter and Dustdar, Schahram and Walliser, Marius
		  and Brantschen, Stefan and Calisti, Monique and Hempfling,
		  Thomas},
  year		= {2010},
  pages		= {105 -- 116},
  publisher	= {Springer, Birkh{\"a}user Computer Science, Basel},
  location	= {Dublin, Ireland},
  mytype	= {WORKSHOP},
  language	= {English},
  url_home	= {http://dx.doi.org/10.1007/978-3-0346-0104-7_7},
  abstract	= {Compliance management is a critical concern for
		  corporations, required to respect contracts. This concern
		  is particularly relevant in the context of business process
		  management (BPM) as this paradigm is getting adopted more
		  widely for designing and building IT systems. Enforcing
		  contractual compliance needs to be modeled at different
		  levels of a BPM framework, which also includes the service
		  layer. In this paper, we discuss requirements and methods
		  for modeling contractual compliance for a SOA-supported
		  BPM. We also show how business rule management integrated
		  into an industry BPM tool allows modeling and processing
		  functional and non-functional-property constraints which
		  may be extracted from business process contracts. This work
		  proposes a framework that responds to the requirements
		  identified and proposes an architecture implementing it.
		  Our approach is also illustrated by an example.}
}

@InProceedings{	  el-kharbili.stein.ea:towards,
  author	= {El Kharbili, Marwane and Stein, Sebastian and Markovic,
		  Ivan and Pulverm{\"u}ller, Elke},
  title		= {Towards a Framework for Semantic Business Process
		  Compliance Management.},
  booktitle	= {Proceedings of the Workshop on Governance, Risk and
		  Compliance for Information Systems (GRCIS 2008)},
  volume	= {339},
  publisher	= {CEUR Workshop Proceedings},
  pages		= {1 -- 15},
  year		= {2008},
  month		= {June},
  address	= {Montepellier, France},
  editor	= {Sadiq, Shazia and Indulska, Marta and {zur~Muehlen},
		  Michael.},
  mytype	= {WORKSHOP},
  abstract	= {Processes count to the most important assets of companies.
		  Ensuring the compliance of processes to legal regulations,
		  governance guidelines, and strategic business requirements
		  is a sine qua non condition to controlling business
		  behavior. Implementing business process compliance requires
		  means for modeling and enforcing compliance measures. In
		  this work, we motivate the need for automation in
		  compliance management and introduce the role of policies.
		  We then distinguish eight requirements for a compliance
		  management framework. We also discuss different ways of
		  conducting compliance checking. Finally, we propose a
		  policy-based framework for business process compliance
		  management. We eventually proceed to a discussion of the
		  soundness and practicability of our approach, followed by
		  an investigation of the main challenges ahead of our
		  approach to policy-based semantic business process
		  compliance management.},
  url_home	= {http://ai2-s2-pdfs.s3.amazonaws.com/febb/99f0b652fd4e311487c6470e1dbf6570d19a.pdf}
}

@InProceedings{	  feja.speck.ea:business,
  author	= {Feja, Sven and Speck, Andreas and Pulverm{\"u}ller, Elke},
  title		= {Business Processes Verification.},
  booktitle	= {Proceedings of the Workshop on Business Process Modeling
		  and Realization (BPMR), 39. Jahrestagung der Gesellschaft
		  f\"ur Informatik, INFORMATIK 2009 },
  series	= {Lecture Notes in Informatics LNI},
  volume	= {154},
  location	= {L\"ubeck, Germany},
  year		= {2009},
  publisher	= {GI-Edition},
  mytype	= {WORKSHOP},
  abstract	= {Models of commercial systems reflect either the statical
		  structure or the dynamic behavior of a system. The dynamic
		  aspects are the business processes and their models.
		  Whereas the static relations in a system may be expressed
		  by Boolean logic, the dynamic activities and their temporal
		  sequences ask for a better formalism, e.g. temporal logic.
		  Temporal logic is based on Boolean logic extended by
		  operators expressing the temporal order of states. In
		  general there are different technologies to verify temporal
		  sequences. Our choice is the model checking concept. In the
		  paper we present examples of business process models and
		  how these models may be checked. We introduce a model to
		  specify the rules (rules model) and demonstrate how the
		  results of the checks can be displayed in the business
		  process models. These models and the rules are represented
		  in a graphical editor. Both models are transformed into a
		  formal language which may be processed by a verification
		  tool - a model checker in our case. The results are then
		  visualized in the graphical editor indicating where the
		  model violates or keeps the rules.},
  language	= {English},
  url_home	= {http://cs.emis.de/LNI/Proceedings/Proceedings154/gi-proc-154-373.pdf}
}

@InBook{	  feja.speck.ea:in,
  author	= {Feja, Sven and Speck, Andreas and Pulverm{\"u}ller, Elke
		  and Schulz, Marcel},
  chapter	= {6: Verification of e-Commerce Business Processes},
  title		= {In: Electronic Business Interoperability: Concepts,
		  Opportunities and Challenges},
  editor	= {Kajan, Ejub},
  pages		= {105 -- 123},
  year		= {2011},
  month		= {December},
  publisher	= {IGI Global},
  language	= {English},
  mytype	= {CHAPTER},
  abstract	= {Like other large scale systems interoperating with other
		  systems large scale e-commerce systems and their
		  interactions are hard to be validated or verified although
		  the quality requirements for these systems are very high.
		  The question is now: are there any further possibilities to
		  check these systems except doing this manually? An approach
		  is to focus on the models describing the systems; and
		  specifically to focus on the models of the behavior.
		  Although the verification of temporal aspects is much more
		  complex than checking static dependencies there is a
		  promising technology: model checking. Nevertheless we need
		  distinctive improvements before this technology can be
		  applied in the real system development. We need graphical
		  formal requirement notations for different kinds of process
		  model notations as representations of the specification of
		  rules. We must be able to present the results positive and
		  especially negative to the different types of stakeholders.
		  And finally the model checking technique has to be improved
		  in order to deal with different types of model elements
		  which are typical for business process models.},
  url_home	= {http://www.igi-global.com/chapter/electronic-business-interoperability/52151}
}

@InProceedings{	  fotsch.pulvermuller.ea:modeling,
  author	= {F\"{o}tsch, Daniel and Pulverm{\"u}ller, Elke and Rossak,
		  Wilhelm},
  title		= {Modeling and Verifying Workflow-based Regulations},
  booktitle	= {Proceedings of the Workshop on Regulations Modelling and
		  their Validation \& Verification (REMO2V), in Conjunction
		  with the 18th Conference on Advanced Information System
		  Engineering - Trusted Information Systems (CAiSE'06)},
  month		= {June},
  year		= {2006},
  pages		= {825 -- 830},
  editor	= {Latour, T. and Petit, M.},
  publisher	= {Namur University Press},
  location	= {Luxembourg},
  mytype	= {WORKSHOP},
  abstract	= {In this paper we present our approach to model and verify
		  workflow-intensive systems. Besides the functional
		  properties (given by the temporal workflow description) we
		  augment the model and model checking with additional
		  property treatment to deal with multifarious non-functional
		  properties and property hierarchies. This enables a more
		  powerful verification of requirements such as given
		  business-driven regulations in these system workflows.},
  language	= {English},
  url_home	= {http://ftp.informatik.rwth-aachen.de/Publications/CEUR-WS/Vol-241/paper7.pdf}
}

@InProceedings{	  fotsch.pulvermuller:applying,
  author	= {F\"{o}tsch, Daniel and Pulverm{\"u}ller, Elke},
  title		= {Applying the Operator Hierarchy Concept to XSLT},
  booktitle	= {Proceedings XML-Tage in Berlin 2007 (XMLT 07)},
  publisher	= {XML-clearinghouse},
  month		= {September},
  year		= {2007},
  pages		= {51 -- 62},
  location	= {Berlin, Germany},
  mytype	= {CONFERENCE},
  abstract	= {XML has a broad acceptance as a standardized flexible text
		  format for storing and exchanging of a wide variety of
		  data. As a result, transformations between XML documents
		  become more and more important. A scalable transformation
		  approach requires the possibility to express transformation
		  definitions in terms of domain-specific constructs. Only in
		  this case, the domain knowledge is explicitly available and
		  not hidden into, e. g., Java or XSLT code. Consequently,
		  domain experts can easier understand, validate, and modify
		  the transformation themselves. This paper presents a
		  generic composition concept that relies on transformation
		  itself. It allows the definition of transformation operator
		  hierarchies containing different levels of transformation
		  operators, e. g. domain-independent and domain-specific
		  ones. We apply the proposed operator hierarchy concept to
		  XSLT, and build new complex operators on top of existing
		  ones which are specifically suited to develop
		  transformations in a certain application area.},
  language	= {English},
  url_home	= {}
}

@Article{	  fotsch.pulvermuller:concept,
  author	= {F{\"o}tsch, Daniel and Pulverm{\"u}ller, Elke},
  title		= {A Concept and Implementation of Higher-level XML
		  Transformation Languages},
  journal	= {Journal on Knowledge-Based Systems (KNOSYS)},
  year		= {2009},
  volume	= {22},
  number	= {3},
  pages		= {186 -- 194},
  month		= {April},
  publisher	= {Elsevier Science Publishers B.V.},
  mytype	= {JOURNAL},
  language	= {English},
  url_home	= {http://dx.doi.org/10.1016/j.knosys.2008.11.003},
  abstract	= {In the software development (e. g. with product lines or
		  refactoring) transformations play an increasing role. To
		  ease and automate these transformations, we propose a
		  solution based on the operator hierarchy concept. It allows
		  to define transformation operator hierarchies containing
		  different levels of transformation operators. The operators
		  capture reusable knowledge units. The concrete realization
		  of such a higher-level transformation language construction
		  is demonstrated by an application of the XML operator
		  hierarchy concept to the transformation language XSLT. XSLT
		  serves as an example which is employed to provide the
		  elementary transformation operators. On top of these
		  elementary operators the layered concept allows the
		  definition of new higher-level operators, e. g.
		  domain-independent and domain-specific ones. In an
		  application example the construction of the higher-level
		  language XML2DSV is presented. This is a stand-alone
		  domain-specific transformation language, which can be used
		  to create delimiter-separated values (DSV) files from XML
		  documents, on the base of XSLT. We developed XTC (XML
		  Transformation Coordinator) to automate the multi-level
		  transformation process.}
}

@InProceedings{	  fotsch.pulvermuller:constructing,
  author	= {F\"{o}tsch, Daniel and Pulverm{\"u}ller, Elke},
  title		= {Constructing higher-level Transformation Languages based
		  on XML},
  booktitle	= {Proceedings of the 6th International Conference on New
		  Trends in Software Methodologies, Tools and Techniques
		  (SoMeT_07)},
  publisher	= {IOS Press},
  volume	= {161},
  month		= {November},
  year		= {2007},
  pages		= {269 -- 284},
  location	= {Rome, Italy},
  mytype	= {CONFERENCE},
  abstract	= {Based on the experience in the e-commerce domain, we
		  propose a concept for the development of higher-level
		  transformation languages. Transformation is a key factor in
		  this domain as the market requires a fast reaction to
		  frequent changes in the interfaces and exchange data.
		  Moreover, a typical e-commerce system is divided into
		  different services which are offered and hosted by
		  different vendors which results in a complex integration
		  problem. Our proposed solution is based on the operator
		  hierarchy concept which allows to define transformation
		  operator hierarchies containing different levels of
		  transformation operators. The concrete realization of such
		  a higher-level transformation language construction is
		  demonstrated by an application of the XML operator
		  hierarchy concept to the transformation language XSLT. XSLT
		  serves as an example which is employed to provide the
		  elementary transformation operators. On top of these
		  elementary operators the layered concept allows the
		  definition of new higher-level operators, e. g.
		  domain-independent and domain-specific ones. The
		  construction of the higher-level language XML2DSV is
		  presented, for instance. This is a stand-alone
		  domain-specific transformation language, which creates
		  delimeter-separated values (DSV) files from XML documents,
		  on the base of XSLT.},
  language	= {English},
  url_home	= {http://dl.acm.org/citation.cfm?id=1566994}
}

@InProceedings{	  glodt.kelsen.ea:democles,
  author	= {Glodt, Christian and Kelsen, Pierre and Pulverm{\"u}ller,
		  Elke},
  title		= {DEMOCLES: A Tool for Executable Modeling of
		  Platform-Independent Systems.},
  booktitle	= {Proceedings of the OOPSLA Conference 2007 Companion -
		  Demonstration},
  location	= {Nashville, USA},
  month		= {September},
  year		= {2007},
  pages		= {870 -- 871},
  mytype	= {OTHER},
  abstract	= {The main goal of model-driven architecture is the
		  generation of the full implementation of a system based on
		  a precise description of a platform-independent model and a
		  platform model. Such a description must accurately specify
		  the static structure as well as the dynamic behavior of the
		  system. We present a tool -- called DEMOCLES -- that
		  realizes a hybrid approach to platform-independent
		  modeling. It describes the static structure using a
		  modified UML class diagram that separates query operations
		  from modifier operations. The former are defined in the
		  class diagram via OCL constraints, while the latter are
		  defined using a MOF-based metamodel that contains modifier
		  operations and properties as first-class entities and
		  augments them with associations and OCL expressions. The
		  tool is an Eclipse-plugin that offers overlay views of the
		  structure and behavior with visual editing capabilities and
		  permits execution of a platform-independent system.},
  language	= {English},
  url_home	= {http://dl.acm.org/citation.cfm?id=1297931}
}

@TechReport{	  goerigk.pulvermuller.ea:sprachen,
  author	= {Goerigk, Wolfgang and Pulverm{\"u}ller, Elke and Speck,
		  Andreas},
  title		= {{S}prachen, {A}rchitekturen und neue objektorientierte
		  {S}oftwaretechniken.},
  month		= {October},
  year		= {2001},
  institution	= {Christian-Albrechts-Universit{\"a}t Kiel},
  number	= {2018},
  mytype	= {TECHNICALREPORT},
  abstract	= {This Technical Report collects all accepted contributions
		  of the common Workshop of GI-FG 2.1.4 and GI-FG 2.1.9, held
		  at Bad Honnef, Germany (May 2001).},
  url_home	= {}
}

@InProceedings{	  iyenghar.pulvermuller.ea:integrated,
  author	= {Iyenghar, Padma and Pulverm{\"u}ller, Elke and Westerkamp,
		  Clemens and W{\"u}bbelmann, J{\"u}rgen},
  title		= {Integrated Model-based Approach and Test Framework for
		  Embedded Systems.},
  booktitle	= {Proceedings of the IEEE International Forum on
		  Specification \& Design Languages. Forum for Design
		  Languages (FDL)},
  publisher	= {IEEE Press},
  month		= {September},
  year		= {2011},
  pages		= {1 -- 8},
  location	= {Oldenburg, Germany},
  mytype	= {CONFERENCE},
  abstract	= {In the recent decade, new automated methodologies such as
		  the Model Driven Development (MDD) and Model-Based Testing
		  (MBT) are under evaluation for embedded systems development
		  and testing. However, most of the currently existing MBT
		  approaches are neither integrated with the software
		  development process nor transferred to real-life embedded
		  software engineering projects. There is also a lack of
		  usage of corresponding modeling languages for the MDD and
		  MBT phases. In this context, this paper discusses the
		  applicability of an integrated model-based approach and
		  test framework which addresses the aforementioned gaps. The
		  approach is evaluated in a spark extinguishing embedded
		  system example based on a real-life embedded software
		  engineering project. A test framework generation algorithm
		  which generates the necessary artifacts for deploying MBT
		  in resource-constrained embedded systems is discussed. A
		  prototype implementation of the proposed approach and
		  illustrative examples are presented.},
  language	= {English},
  url_home	= {http://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=6069477&isnumber=6069466}
}

@Article{	  iyenghar.pulvermuller.ea:model-based,
  author	= {Iyenghar, Padma and Pulverm{\"u}ller, Elke and Westerkamp,
		  Clemens and Uelschen, Michael and W{\"u}bbelmann, J{\"u}rgen},
  title		= {Model-Based Debugging of Embedded Software Systems.},
  journal	= {Softwaretechnik-Trends (STT)},
  volume	= {31},
  publisher	= {Gesellschaft für Informatik (GI)},
  number	= {3},
  month		= {August},
  year		= {2011},
  mytype	= {JOURNAL},
  abstract	= {Model Driven Development (MDD) has been slowly superseding
		  traditional ways of developing embedded software in the
		  recent decade. In line with the MDD, debugging Real-Time
		  Embedded Software Systems (RTESS) and visualizing their
		  behavior using models such as UML diagrams is becoming a
		  reality. However, the existing MDD based debugging tools
		  for RTESS are not applicable (require significant source
		  code instrumentation, sophisticated debug interfaces, etc)
		  for memory-size constrained RTESS. To address this, we
		  discuss a model-based debugging methodology for RTESS which
		  aims at overcoming the aforementioned limitations. Using
		  our approach, the target behavior can be visualized in
		  real-time using UML sequence and timing diagrams. We
		  illustrate our approach with a prototype and examples.
		  Performance metrics such as the target monitor size and the
		  instrumentation overhead are discussed.},
  language	= {English},
  url_home	= {http://pi.informatik.uni-siegen.de/stt/31_3/01_Fachgruppenberichte/ada/3-Iyenghar-MB-Debugging.pdf}
}

@InProceedings{	  iyenghar.pulvermuller.ea:towards,
  author	= {Iyenghar, Padma and Pulverm{\"u}ller, Elke and Westerkamp,
		  Clemens},
  title		= {Towards Model-Based Test Automation for Embedded Systems
		  using UML and UTP.},
  booktitle	= {Proceedings of the 16th IEEE International Conference on
		  Emerging Technologies Factory Automation (ETFA)},
  publisher	= {IEEE Computer Society},
  month		= {September},
  year		= {2011},
  pages		= {1 -- 9},
  location	= {Toulouse, France},
  mytype	= {CONFERENCE},
  abstract	= {Model-based methodologies such as the Model-Driven
		  Development (MDD) and Model-Based Testing (MBT) are being
		  explored, in the recent decade, for automation in embedded
		  software engineering projects. In this context, the target
		  of this paper is to demonstrate the adoption and
		  applicability of the Uniﬁed Modeling Language (UML) and
		  the UML Testing Proﬁle (UTP) for deploying MBT in
		  Resource-Constrained (RC)-Real-Time Embedded Systems
		  (RTES). Though the UTP standard has been introduced several
		  years ago, concrete approaches or tool support for
		  generating the test artifacts based on the UTP is currently
		  unavailable. This paper aims to close this gap and
		  discusses a concise set of UTP artifacts in the context of
		  MBT for RC-RTES. A detailed discussion on the test
		  artifacts generation algorithm demonstrating the
		  applicability of our approach in a real-life RC-RTES
		  example is presented.},
  language	= {English},
  url_home	= {http://dx.doi.org/10.1109/ETFA.2011.6058982}
}

@InProceedings{	  iyenghar.westerkamp.ea:architecture,
  author	= {Iyenghar, Padma and Westerkamp, Clemens and
		  W{\"u}bbelmann, J{\"u}rgen and Pulverm{\"u}ller, Elke},
  title		= {An Architecture for Deploying Model Based Testing in
		  Embedded Systems.},
  booktitle	= {Proceedings of the IEEE International Forum on
		  Specification \& Design Languages. Forum for Design
		  Languages (FDL)},
  publisher	= {IEEE Press},
  month		= {September},
  year		= {2010},
  pages		= {1 -- 6},
  location	= {Southampton, United Kingdom},
  mytype	= {CONFERENCE},
  abstract	= {There have been several model based approaches used in the
		  recent past for alleviating complexity in design,
		  development and test case generation for real-time embedded
		  software systems. However, deploying/executing these test
		  cases in the embedded target without affecting the
		  real-time behavior of the system still remains a
		  challenging and unanswered question. To address this, we
		  propose a novel architecture to perform an integrated model
		  based testing for embedded systems. We introduce a holistic
		  model based design, development and testing approach with
		  the aid of a monitor and target debugger solution for
		  real-time embedded systems. Our proposed approach
		  eliminates the need for dynamic source code instrumentation
		  inserted into the target to execute the software test
		  routines. This will result in preserving the real-time
		  behavior which is a boon especially for real-time critical
		  and code size constrained embedded systems. We illustrate
		  our proposed approach with a prototype and an example.},
  language	= {English},
  url_home	= {http://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=5775133&isnumber=5774244}
}

@InProceedings{	  iyenghar.westerkamp.ea:design,
  author	= {Iyenghar, Padma and Westerkamp, Clemens and
		  W{\"u}bbelmann, J{\"u}rgen and Pulverm{\"u}ller, Elke},
  title		= {Design Level Debugging of Timing Behavior in Embedded
		  Systems: Using a Model-based Approach.},
  booktitle	= {Proceedings of the 9th IEEE International Conference on
		  Industrial Informatics (INDIN)},
  publisher	= {IEEE Press},
  month		= {July},
  year		= {2011},
  pages		= {889 -- 894},
  location	= {Lisbon, Portugal},
  mytype	= {CONFERENCE},
  abstract	= {A robust model-based debugging and testing technique
		  integrated with the Model Driven Development (MDD) approach
		  for memory size constrained, real-time critical embedded
		  target systems is still in its nascent stages. This is
		  especially true for the industry standard MDD-based tools.
		  In addition, a model-based debugging technique or tool
		  chain based on the newly introduced timing diagrams in UML
		  2.x is not yet available. In this paper, we discuss a
		  model-based, design-level debugging approach with which the
		  timing behavior of embedded targets is visualized with the
		  aid of UML timing diagrams on the host side, in real-time.
		  The proposed approach is suitable for memory size
		  constrained, real-time embedded target systems as the
		  overhead introduced is negligible, constant and known
		  beforehand. Hence, the end-user has the option to include
		  the overhead in the system design phase, thereby making use
		  of a model-based debug solution and at the same time
		  adhering to temporal constraints. A prototype
		  implementation of the proposed approach is discussed and an
		  illustrative example is presented.},
  language	= {English},
  url_home	= {http://dx.doi.org/10.1109/INDIN.2011.6035011}
}

@InProceedings{	  iyenghar.westerkamp.ea:model,
  author	= {Iyenghar, Padma and Westerkamp, Clemens and
		  W{\"u}bbelmann, J{\"u}rgen and Pulverm{\"u}ller, Elke},
  title		= {A Model Based Approach for Debugging Embedded Systems in
		  Real-Time.},
  booktitle	= {Proceedings of the 10th International ACM Conference on
		  Embedded Software (EMSOFT)},
  publisher	= {ACM},
  address	= {New York, NY, USA},
  month		= {October},
  year		= {2010},
  pages		= {69 -- 78},
  location	= {Scottsdale, Arizona, USA},
  mytype	= {CONFERENCE},
  abstract	= {Model driven design and development of real-time embedded
		  systems has been gaining a lot of attention in the recent
		  past. It is imperative for a hard real-time embedded system
		  to execute and respond to sequenced exchanges of messages
		  under critical temporal constraints. The UML provides
		  artifacts such as communication diagrams, sequence diagrams
		  and timing diagrams to aid software engineers to model and
		  precisely document such a schedule of interactions or state
		  changes at the design level. While modeling at the design
		  level is interesting on one hand, it is also significant to
		  understand the run time behavior of the embedded software.
		  A step forward in this direction is to provide a real-time
		  representation of the target system behavior on the host
		  side. We propose an approach to realize a target debugger
		  on the host side with a monitor solution in the target
		  side. With the back annotated information from the target,
		  a visual representation of the system behavior in real-time
		  is now available at the design level. This way, a debugging
		  solution in real-time is provided, thus taking a step
		  forward towards understanding the behavior of the embedded
		  software at hand. We illustrate our proposed approach with
		  a prototype and examples.},
  language	= {English},
  url_home	= {http://dx.doi.org/10.1145/1879021.1879031}
}

@InProceedings{	  kelsen.pulvermuller.ea:declarative,
  author	= {Kelsen, Pierre and Pulverm{\"u}ller, Elke and Glodt,
		  Christian},
  title		= {A Declarative Executable Language based on OCL for
		  Specifying the Behaviour of Platform-Independent Models.},
  booktitle	= {Proceedings of the Ocl4All 2007 Workshop},
  address	= {Nashville, USA},
  month		= {September},
  year		= {2007},
  mytype	= {WORKSHOP},
  language	= {English},
  url_home	= {https://pdfs.semanticscholar.org/5f65/915322494b840c2b995a5190f6adb796c62f.pdf}
}

@Article{	  kelsen.pulvermuller.ea:specifying,
  author	= {Kelsen, Pierre and Pulverm{\"u}ller, Elke and Glodt,
		  Christian},
  title		= {Specifying executable platform-independent models using
		  OCL.},
  journal	= {Journal of the Electronic Communications of the EASST},
  year		= {2008},
  volume	= {9},
  mytype	= {JOURNAL},
  abstract	= {Model-driven architecture aims at describing a system
		  using a platform-independent model in sufficient detail so
		  that the full implementation of the system can be generated
		  from this model and a platform model. This implies that the
		  platform-independent model must describe the static
		  structure as well as the dynamic behavior of the system. We
		  propose a declarative language for describing the behavior
		  of platform-independent models based on a hybrid notation
		  that uses graphical elements as well as textual elements in
		  the form of OCL code snippets. Compared to existing
		  approaches based on action languages it is situated at a
		  higher level of abstraction and, through a clean separation
		  of modifier operations and query operations, simplifies the
		  comprehension of the behavioral aspects of the
		  platform-independent system.},
  url_home	= {http://journal.ub.tu-berlin.de/index.php/eceasst/article/view/101}
}

@InProceedings{	  klaeren.pulvermuller.ea:aspect,
  author	= {Klaeren, Herbert and Pulverm{\"u}ller, Elke and Rashid,
		  Awais and Speck, Andreas},
  title		= {{A}spect {C}omposition applying the {D}esign by {C}ontract
		  {P}rinciple.},
  booktitle	= {Proceedings of the Second International Symposium on
		  Generative and Component-Based Software Engineering (GCSE)
		  / Proceedings of the NetObjectDays 2000},
  pages		= {453 -- 463},
  series	= {Lecture Notes in Computer Science (LNCS)},
  volume	= {2177},
  month		= {October},
  year		= {2000},
  location	= {Erfurt, Germany},
  mytype	= {CONFERENCE},
  pdf		= {./publications/KlaerenPulverm{\"u}llerRashidSpeckGCSE2000.pdf},
  abstract	= {The composition of software units has been one of the main
		  research topics in computer science. This paper addresses
		  the composition validation problem evolving in this
		  context. It focuses on the composition for a certain kind
		  of units called aspects. Aspects are a new concept which is
		  introduced by aspect-oriented programming aiming at a
		  better separation of concerns. Cross-cutting code is
		  captured and localised in these aspects. Some of the
		  cross-cutting features which are expressed in aspects
		  cannot be woven with other features into the same
		  application since two features could be mutually exclusive.
		  With a growing number of aspects, manual control of these
		  dependencies becomes error-prone or even impossible. We
		  show how assertions can be useful in this respect to
		  support the software developer.},
  language	= {English},
  url_home	= {http://link.springer.com/content/pdf/10.1007/3-540-44815-2.pdf#page=65}
}

@TechReport{	  mehner.mezini.ea:aspektorientierung,
  author	= {Mehner, Katharina and Mezini, Mira and Pulverm{\"u}ller,
		  Elke and Speck, Andreas},
  title		= {{A}spektorientierung - {W}orkshop der {GI}-{F}achgruppe
		  2.1.9 {O}bjektorientierte {S}oftware-{E}ntwicklung.},
  month		= {May},
  institution	= {Universit{\"a}t-Gesamthochschule Paderborn, Fachbereich
		  Mathematik-Informatik},
  number	= {tr-ri-01-223},
  year		= {2001},
  mytype	= {TECHNICALREPORT},
  abstract	= {This Technical Report collects all accepted contributions
		  of the Workshop on Aspect-Oriented Programming, held at
		  Paderborn (May 2001).},
  language	= {English},
  url_home	= {}
}

@Proceedings{	  pulvermuller.borne.ea:proceedings,
  title		= {Proceedings of the SC: Workshop on Software Composition},
  volume	= {65(4)},
  issue		= {4},
  series	= {Electronic Notes in Theoretical Computer Science},
  publisher	= {Elsevier Science Publishers (ENTCS)},
  editor	= {Pulverm{\"u}ller, Elke and Borne, Isabelle and Bouraqadi,
		  Noury and Cointe Pierre and Assmann, Uwe},
  month		= {April},
  year		= {2002},
  mytype	= {OTHER},
  abstract	= {This volume contains the Proceedings of the First Workshop
		  on Software Composition (SC 2002). The Workshop has been
		  held in Grenoble, France on April 7th, 2001, as a satellite
		  event of ETAPS 2002. The aim of the SC Workshop is to
		  collect different approaches and experiences in the domain
		  of software composition. Component-based approaches to
		  produce software from smaller units attract increasing
		  attention of both research and industry. The rational
		  behind this trend is in the promise of reuse. This is the
		  idea to produce software by "plug \& play" components which
		  already exist or are produced by different external
		  vendors. Components and software composition are considered
		  to be a new way to overcome the remaining problems (e.g.
		  reusability, deal with complexity) still not solved by the
		  object-oriented paradigm. In this context, the SC workshop
		  collects different approaches and experiences to explore
		  and overcome the gap between promise and reality. The goal
		  is to demystify these new approaches based on components
		  and instead elaborate the real advantages, problems and
		  challenges.},
  language	= {English},
  url_home	= {}
}

@Article{	  pulvermuller.feja.ea:developer-friendly,
  author	= {Pulverm{\"u}ller, Elke and Feja, Sven and Speck, Andreas},
  title		= {Developer-friendly Verification of Process-based
		  Systems.},
  journal	= {Journal on Knowledge-Based Systems (KNOSYS)},
  volume	= {23},
  publisher	= {Elsevier Science Publishers B.V.},
  number	= {7},
  month		= {October},
  pages		= {667 -- 676},
  year		= {2010},
  mytype	= {JOURNAL},
  abstract	= {System quality is a key issue in modern systems
		  development. Tool support is essential for checking the
		  system quality efficiently. This is particularly true with
		  respect to the dynamic interactions of the processes within
		  a system. A first generation of checkers - model checkers -
		  provide a basic technology for the verification of
		  process-based systems. Conventional model checkers bear two
		  drawbacks concerning mainly their user-friendliness which
		  impede their broad application. First, model checkers in
		  general do not support the graphical representation of
		  rules (specifications). Although a model may be described
		  with a graphical notation the specification which has to be
		  checked against the model is generally still text-based.
		  This makes the usage of the checker difficult for process
		  modeling experts. Second, the expressiveness concerning the
		  verification model semantics to be checked is limited to
		  states which are connected by transitions. However, many
		  system development models (e.g. the business process model
		  we use as example) embrace more element types. These are
		  unsupported by the conventional model checkers resulting in
		  a loss of verification precision. The checking system we
		  present in this paper integrates both novelties: the
		  graphical notation for a user-friendly specification and an
		  extended specification language together with a
		  corresponding verifier which supports the checking of many
		  different types of elements (although the paper presents
		  the approach with only two types). The integration is
		  realized by an XML-based transformation system which links
		  the graphical editor to the checking tool.},
  language	= {English},
  url_home	= {http://dx.doi.org/10.1016/j.knosys.2010.03.005}
}

@Book{		  pulvermuller.goos.ea:new,
  author	= {Pulverm{\"u}ller, Elke and Goos, Gerhard and Assmann, Uwe},
  title		= {New Software Composition Concepts. Special Issue in the
		  Science of Computer Programming Journal (SCP).},
  volume	= {56},
  number	= {1-2},
  pages		= {1 -- 249},
  month		= {April},
  publisher	= {Elsevier Science Publishers B.V.},
  year		= {2005},
  mytype	= {EDITEDVOLUME},
  url_home	= {http://linkinghub.elsevier.com/retrieve/pii/S016764230400173X}
}

@InProceedings{	  pulvermuller.haupt.ea:leading,
  author	= {Pulverm{\"u}ller, Elke and Haupt, Michael and Larsson,
		  Johan and Martin, Johannes and Statenzi, David},
  title		= {{L}eading {E}dge in {O}bject-{O}rientation: {D}o {W}e
		  {N}eed {S}tandards for {L}eading {E}dge {OO}
		  {T}echnologies?, {A}ppendix of: {P}h{DOOS} 2000: {T}he 10th
		  {P}h.{D}. {W}orkshop on {O}bject-{O}riented {S}ystems.},
  booktitle	= {ECOOP 2000 Workshop Reader},
  subtitle	= {PhDOOS 2000 (in conjunction with ECOOP 2000)},
  series	= {Lecture Notes in Computer Science},
  volume	= {1964},
  pages		= {84 -- 86},
  month		= {June},
  year		= {2000},
  publisher	= {Springer},
  location	= {Sophia Antipolis, France},
  mytype	= {OTHER},
  language	= {English},
  url_home	= {}
}

@InProceedings{	  pulvermuller.klaeren.ea:aspects,
  author	= {Pulverm{\"u}ller, Elke and Klaeren, Herbert and Speck,
		  Andreas},
  title		= {{A}spects in {D}istributed {E}nvironments.},
  booktitle	= {Proceedings of the First International Symposium on
		  Generative and Component-Based Software Engineering
		  (GCSE)},
  editor	= {Czarnecki, K. and Eisenecker, U. W.},
  series	= {Lecture Notes in Computer Science (LNCS)},
  volume	= {1799},
  pages		= {37 -- 48},
  month		= {September},
  year		= {1999},
  publisher	= {Springer},
  location	= {Erfurt, Germany},
  mytype	= {CONFERENCE},
  abstract	= {We illustrate how to combine CORBA as a distributed system
		  with aspect-oriented programming (AOP) and the resulting
		  positive impacts. In particular, we focus on the question
		  how AOP can be applied to a CORBA application aiming at a
		  better separation of concerns. The paper shows with
		  implementation examples a practical way to package the
		  distribution issues of a CORBA application into separated
		  aspects (with AspectJ). This supports the distributed
		  application design and leads to increased flexiblity.},
  language	= {English},
  url_home	= {https://link.springer.com/chapter/10.1007/3-540-40048-6_4}
}

@InProceedings{	  pulvermuller.ludwig.ea:capability,
  author	= {Pulverm{\"u}ller, Elke and Ludwig, Andr{\'e} and Belter,
		  Roman and Zyskowski, Dominik and Heindl, Ulrich and Nguyen,
		  Xuan Thang},
  title		= {A Capability Oriented Management Approach for Business
		  Integration.},
  booktitle	= {Proceedings of the 1st International Conference on
		  Business Process and Service Computing (BPSC'07) as Part of
		  Software, Agents and Services for Business, Research, and
		  E-Sciences (SABRE)},
  location	= {Leipzig, Germany},
  month		= {September},
  year		= {2007},
  mytype	= {CONFERENCE},
  abstract	= {Service oriented architecture (SOA) has emerged as a
		  popular software paradigm for integrating distributed
		  applications. Services are generally regarded as
		  interoperable building blocks for constructing,
		  integrating, and merging applications. However, existing
		  SOA based solutions often focus on solving technical
		  integration problems while neglecting business-level
		  capabilities which are most important for organizations. In
		  this paper, we introduce the notion of capabilities as an
		  important concept for business management. We identify
		  major shortcomings of the existing service based solutions
		  and outline a novel approach for capability oriented
		  configuration and management that can react to the
		  dynamically changing nature of business integration
		  environments.},
  language	= {English},
  url_home	= {https://www.researchgate.net/profile/Andre_Ludwig/publication/221462305_A_Capability_Oriented_Management_Approach_for_Business_Integration/links/0a85e5315b79a4fb62000000.pdf}
}

@TechReport{	  pulvermuller.rashid.ea:supporting,
  author	= {Pulverm{\"u}ller, Elke and Rashid, Awais and Speck,
		  Andreas},
  title		= {{S}upporting {C}omposition using {A}ssertions.},
  institution	= {Lancaster University, Computing Department, UK},
  year		= {2000},
  number	= {CSEG/4/00},
  location	= {Lancaster, UK},
  mytype	= {TECHNICALREPORT},
  month		= {August}
}

@InProceedings{	  pulvermuller.speck.ea:component,
  author	= {Pulverm{\"u}ller, Elke and Speck, Andreas and Feja, Sven
		  and Witt, S{\"o}ren},
  title		= {Component Composition Validation.},
  booktitle	= {Proceedings of the 10th International Conference on
		  Software Methodologies, Tools and Techniques (SoMeT_2011)},
  publisher	= {IOS Press},
  volume	= {231},
  month		= {September},
  year		= {2011},
  pages		= {5 -- 19},
  location	= {St. Petersburg, Russia},
  mytype	= {CONFERENCE},
  abstract	= {Components have been introduced in order to support
		  software reuse. Components are reusable building blocks for
		  larger systems consisting of units (code pieces) and their
		  construction plan. Technologies like COM+, .Net, CORBA
		  JavaBeans and EJBs (or web services which may be considered
		  as web-based components) have been developed to support the
		  component concept. However, components still have the
		  problem of both unavailable and unreliable documentation of
		  their properties. Moreover, a lack of validation support
		  concerning the components' or composed systems' behavior
		  may be observed. In other words, there is a lot of
		  knowledge about how to combine components technically but
		  less experience to validate the interactions between the
		  components. In this paper we introduce an approach to model
		  components and their compositions as a base for automatic
		  validation techniques to check the components composition
		  and their interactions. The validation aims at deriving the
		  component models from the implementation which allows
		  comparing the specifications with the real components
		  code.},
  language	= {English},
  url_home	= {https://pdfs.semanticscholar.org/d29e/5ede79ade78e7fc282306a7cacf23ec6d0ee.pdf}
}

@TechReport{	  pulvermuller.speck.ea:feature,
  author	= {Pulverm{\"u}ller, Elke and Speck, Andreas and D'Hondt,
		  Maja and De Meuter, Wolfgang and Coplien, James O.},
  title		= {{F}eature {I}nteraction in {C}omposed {S}ystems -
		  {P}roceedings ({ECOOP} 2001).},
  month		= {September},
  year		= {2001},
  institution	= {Universit{\"a}t Karlsruhe, Fakult\"at f\"ur Informatik},
  number	= {2001-14},
  mytype	= {TECHNICALREPORT},
  abstract	= {This Technical Report collects all accepted contributions
		  of the Workshop on Feature Interaction, held at Budapest,
		  Hungary on June 2001.},
  language	= {English},
  url_home	= {}
}

@InProceedings{	  pulvermuller.speck.ea:implementing,
  author	= {Pulverm{\"u}ller, Elke and Speck, Andreas and Rashid,
		  Awais},
  title		= {{I}mplementing collaboration-based {D}esigns using
		  {A}spect-{O}riented {P}rogramming.},
  booktitle	= {Proceedings of TOOLS-USA 2000, Technology of
		  Object-Oriented Languages and Systems, 34th Int'l
		  Conference and Exhibition},
  pages		= {95 -- 104},
  month		= {July/August},
  year		= {2000},
  publisher	= {IEEE Computer Society Press},
  location	= {Santa Barbara, CA, USA},
  mytype	= {CONFERENCE},
  abstract	= {The collaboration-based approach is a powerful means to
		  develop modularised systems by stepwise refinement. In this
		  paper we introduce a new approach to realise a
		  collaboration-based design. Our approach is based on the
		  well-known observation that the knowledge about
		  inter-object collaborations cannot be localised within
		  objects but cross-cuts many objects. Such cross-cutting
		  concerns are effectively addressed by applying the
		  separation of concerns principle. We have, therefore,
		  employed Aspect-Oriented Programming (AOP) to build
		  collaboration-based designs. In the paper we illustrate and
		  discuss our aspect-oriented approach both for the
		  horizontal (i.e. the collaborations) and vertical (i.e. the
		  refinements) dimensions. Although the example
		  implementations are based on AspectJ0.4beta7 from Xerox
		  PARC, the approach is generic enough to be implemented
		  using other AOP techniques.},
  language	= {English},
  url_home	= {http://ieeexplore.ieee.org/abstract/document/868962/}
}

@InProceedings{	  pulvermuller.speck.ea:position,
  author	= {Pulverm{\"u}ller, Elke and Speck, Andreas and Coplien,
		  James O. and D'Hondt, Maja and De Meuter, Wolfgang},
  title		= {{P}osition {P}aper: {F}eature {I}nteraction in {C}omposed
		  {S}ystems.},
  booktitle	= {Proceedings of the Workshop on Feature Interaction in
		  Composed Systems; In Association with the 15th European
		  Conference on Object-Oriented Programming (ECOOP) 2001 -
		  Report No. 2001-14},
  month		= {June},
  year		= {2001},
  pages		= {1 -- 6},
  mytype	= {WORKSHOP},
  abstract	= {Feature interaction is nothing new and not limited to
		  computer science. The problem of undesirable feature
		  interaction (feature interaction problem) has already been
		  investigated in the telecommunication domain. Our goal is
		  the investigation of feature interaction in component-based
		  systems beyond telecommunication. The position paper
		  outlines terminology definitions. It proposes a
		  classification to compare different types of feature
		  interaction. A list of examples give an impression about
		  the nature and the importance of feature interaction.},
  language	= {English},
  url_home	= {https://pdfs.semanticscholar.org/69ae/8dcb449e16ac94f071c3f790f46cd63e3eaf.pdf#page=7}
}

@InProceedings{	  pulvermuller.speck.ea:process,
  author	= {Pulverm{\"u}ller, Elke and Speck, Andreas and Feja, Sven
		  and Witt, S{\"o}ren},
  title		= {Process Model Validation - Transforming Process Models to
		  Extended Checking Models.},
  booktitle	= {Proceedings of the 5th International Conference on
		  Evaluation of Novel Approaches to Software Engineering
		  (ENASE)},
  publisher	= {INSTICC and Springer Communications in Computer and
		  Information Science (CCIS)},
  month		= {July},
  year		= {2010},
  pages		= {214 -- 220},
  location	= {Athens, Greece},
  mytype	= {CONFERENCE},
  abstract	= {Process and workflow models are typical means to describe
		  the dynamic activities of a system. Therefore, it is of
		  high interest to validate these models. Many kinds of
		  (business) rules, best practices, patterns, legal
		  regulations may serve as specifications which the models
		  have to fulfill. An already established technique to
		  validate models of dynamic activities is model checking. In
		  model checking the requirements are expressed by temporal
		  logic. Temporal logic allows describing temporal
		  dependencies. The models to be verified by model checkers
		  are automata. In this context the question is how to
		  transform process or workflow models into automata and how
		  to specify the temporal logic in the way that the semantic
		  of the process models is considered sufficiently. In our
		  paper we present three approaches to transform process
		  models to checkable automata. We use the example of ARIS
		  Event-driven Process Chains. In particular, the third
		  approach introduces specializers enabling semantic-rich
		  requirement specifications. This reduces the gap between
		  process models (consisting of different model element
		  types) and verification models.},
  language	= {English},
  url_home	= {http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.230.9356}
}

@InProceedings{	  pulvermuller.speck.ea:version,
  author	= {Pulverm{\"u}ller, Elke and Speck, Andreas and Coplien,
		  James O.},
  title		= {{A} {V}ersion {M}odel for {A}spect {D}ependency
		  {M}anagement.},
  booktitle	= {Proceedings of the 3rd International Symposium on
		  Generative and Component-Based Software Engineering (GCSE)
		  2001},
  month		= {September},
  publisher	= {Springer},
  series	= {Lecture Notes in Computer Science (LNCS)},
  volume	= {2186},
  pages		= {70 --79},
  location	= {Erfurt, Germany},
  year		= {2001},
  mytype	= {CONFERENCE},
  abstract	= {With Aspect-Oriented Programming (AOP) a new type of
		  system units is introduced (aspects). One observed
		  characteristic of AOP is that it results in a large number
		  of additional (coarse-grained to fine-grained) system units
		  (aspects) ready to be composed to the final application.
		  With this growing number of system units the dependencies
		  between them become vast and tangling. This results in the
		  necessity of an improved management of the dependencies
		  between these system units. Our paper investigates this
		  problem, proposes a more general model (version model) to
		  capture different facettes of AOP as well as a partial
		  solution towards unit consistency based on versions.},
  language	= {English},
  url_home	= {http://link.springer.com/content/pdf/10.1007/3-540-44800-4.pdf#page=79}
}

@Article{	  pulvermuller.speck:gcse99,
  author	= {Pulverm{\"u}ller, Elke and Speck, Andreas},
  title		= {{GCSE}'99 - {T}owards {G}enerative {C}omponents.},
  journal	= {ACM SIGSOFT Software Engineering Notes},
  month		= {February},
  year		= {2000},
  mytype	= {JOURNAL},
  language	= {English},
  url_home	= {}
}

@InProceedings{	  pulvermuller.speck:xopt,
  author	= {Pulverm{\"u}ller, Elke and Speck, Andreas},
  title		= {{XOpT} - {XML}-{B}ased {C}omposition {C}oncept.},
  booktitle	= {Proceedings of the 3rd International Conference on New
		  Software Methodologies, Tools, and Techniques (SoMeT_04),
		  Volume 111},
  publisher	= {IOS Press},
  month		= {September},
  year		= {2004},
  pages		= {249 -- 262},
  location	= {Leipzig, Germany},
  mytype	= {CONFERENCE},
  abstract	= {System development is usually processed by applying
		  different models both on the same and different levels of
		  abstraction. This supports the stepwise refinement, the
		  dealing with the inherent complexity and allows the
		  tailored documentation and specification of the different
		  aspects of the system. This paper presents the XOpT
		  approach to support the composition and adaptation step. It
		  provides a framework based on XML, DOM and XPath technology
		  with an hierarchy of transformation operators. These are
		  either generic or specifically suited for (and thus also
		  restricted to) a certain domain. New operators may be added
		  on top of existing ones on demand. XOpT is a unification of
		  composition and weaving techniques as it operates on the
		  standardized XML data format. Furthermore, this language
		  independence allows the manipulations on different
		  abstraction levels in parallel preserving model
		  consistency. The concepts have been applied to an
		  e-commerce system based on ARIS which also serves as
		  example in this paper.},
  language	= {English},
  url_home	= {https://pdfs.semanticscholar.org/6c83/ac23103ef72a5e7f732a4c93b7cc716171ef.pdf}
}

@InProceedings{	  pulvermuller:aspekte,
  author	= {Pulverm{\"u}ller, Elke},
  title		= {{A}spekte in verteilten {U}mgebungen.},
  booktitle	= {Informatiktage 1999, Fachwissenschaftlicher
		  Informatik-Kongress},
  editor	= {{GI Gesellschaft f{\"u}r Informatik}},
  series	= {ISBN 3-920560-14-0},
  pages		= {110 -- 112},
  publisher	= {Konradin Verlag Robert Kohlhammer GmbH},
  address	= {Bad Schussenried, Germany},
  month		= {November},
  year		= {1999},
  mytype	= {WORKSHOP},
  language	= {German},
  url_home	= {}
}

@InProceedings{	  pulvermuller:composition,
  author	= {Pulverm{\"u}ller, Elke},
  title		= {{C}omposition and {C}orrectness.},
  booktitle	= {SC 2002: Workshop on Software Composition},
  series	= {Electronic Notes in Theoretical Computer Science (ENTCS)},
  volume	= {65},
  issue		= {4},
  location	= {Grenoble, France},
  month		= {April},
  year		= {2002},
  publisher	= {Elsevier Science Publishers},
  mytype	= {WORKSHOP},
  abstract	= {This paper presents an approach to ensure correctness of
		  composed systems. It takes into consideration that
		  correctness can usually be achieved only to a certain
		  degree (except for some small and very mission-critical
		  applications) and complete specifications are usually not
		  practicable. By modelling the parts, the composition
		  activities and the requirements specification we automise
		  the checking procedures using model checking. An important
		  issue hereby is that our approach allows partial modelling
		  and specification.},
  language	= {English},
  url_home	= {http://www.sciencedirect.com/science/article/pii/S1571066104804456}
}

@InProceedings{	  pulvermuller:generative,
  author	= {Pulverm{\"u}ller, Elke},
  title		= {{G}enerative and {C}omponent-{B}ased {S}oftware
		  {E}ngineering.},
  booktitle	= {Proceedings of PhDOOS 2000: 10th Workshop for PhD Students
		  in Object-Oriented Systems (in conjunction with ECOOP
		  2000)},
  month		= {June},
  year		= {2000},
  location	= {Sophia Antipolis, France},
  mytype	= {WORKSHOP},
  language	= {English},
  url_home	= {}
}

@Article{	  pulvermuller:konferenzbericht,
  author	= {Pulverm{\"u}ller, Elke},
  title		= {{K}onferenzbericht {\"u}ber die {STJA'99} mit den
		  {W}orkshops {MIK} und {NMFL} sowie {\"u}ber die {GCSE'99}
		  mit dem {W}orkshop {GCSE YRW}},
  journal	= {Softwaretechnik-Trends STT},
  month		= {November},
  year		= {1999},
  language	= {German},
  mytype	= {OTHER},
  url_home	= {}
}

@InProceedings{	  pulvermuller:reducing,
  author	= {Pulverm{\"u}ller, Elke},
  title		= {Reducing the Gap between Verification Models and Software
		  Development Models},
  booktitle	= {Proceedings of the 8th International Conference on New
		  Trends in Software Methodologies, Tools and Techniques
		  (SoMeT_09)},
  publisher	= {IOS Press},
  volume	= {199},
  month		= {September},
  year		= {2009},
  pages		= {297 -- 313},
  location	= {Prague, Czech Republic},
  mytype	= {CONFERENCE},
  abstract	= {A variety of models and notations are available to support
		  the software developers. Such models help to gather
		  requirements and to build a system implementing these
		  requirements. However, it is often neglected to verify that
		  the requirements are actually fulfilled in the design and
		  implementation. The increasing demand for compliancy to
		  requirements (e.g. due to laws) together with the
		  increasing system complexity re-attracts notice to
		  automatic verification technologies for that purpose. The
		  low user-friendliness and, thus, the low applicability of
		  the verification technologies often prevents their
		  employment. In this paper we aim at closing the gap between
		  software development models with their rich notation and
		  semantics (e.g. Event Process Chains, EPCs) on the one hand
		  and verification-oriented models (typically just simple
		  structures like finite state automata) on the other hand.
		  This is approached by extending the verification model in a
		  controlled manner towards more semantics resulting in our
		  extended Kripke structure. To profit from such a semantic
		  extension we, in addition, extend the temporal logic
		  language CTL. Our new temporal logic language allows to
		  express the expected requirements more precisely.},
  language	= {English},
  url_home	= {http://dx.doi.org/10.3233/978-1-60750-049-0-297}
}

@InProceedings{	  rashid.chitchyan.ea:eproms,
  author	= {Rashid, Awais and Chitchyan, Ruzanna and Speck, Andreas
		  and Pulverm{\"u}ller, Elke},
  title		= {{EProMS}: {A}n {E}-{C}ommerce based {P}rocess {M}odel for
		  {C}ooperative {S}oftware {D}evelopment in {S}mall
		  {O}rganisations.},
  booktitle	= {Proceedings of the 2nd International Conference on
		  ElectronicCommerce and Web Technologies (EC-WEB 2001)},
  month		= {September},
  publisher	= {Springer},
  series	= {Lecture Notes in Computer Science (LNCS)},
  volume	= {2115},
  pages		= {39 -- 48},
  year		= {2001},
  mytype	= {CONFERENCE},
  abstract	= {Existing process models for software development are too
		  resource intensive for small organisations. This paper
		  proposes EProMS, an e-commerce based process model which
		  takes into account the limited resources of these
		  organisations. It distributes the software development
		  process over several small organisations. These
		  organisations, then, co-operate through an e-commerce layer
		  to produce market-driven software. On competitive markets
		  the distribution allows organisations in the co-operation
		  to specialise in specific aspects of software development.
		  This helps them to reduce costs and time to market and
		  achieve a high degree of users' satisfaction.},
  language	= {English}
}

@InProceedings{	  rashid.pulvermuller:from,
  author	= {Rashid, Awais and Pulverm{\"u}ller, Elke},
  title		= {{F}rom {O}bject-{O}riented to {A}spect-{O}riented
		  {D}atabases.},
  booktitle	= {Proceedings of DEXA: 11th International Conference on
		  Database and Expert Systems Applications},
  series	= {Lecture Notes in Computer Science (LNCS)},
  volume	= {1873},
  year		= {2000},
  month		= {September},
  publisher	= {Springer},
  pages		= {125 -- 134},
  location	= {London, Greenwich, UK},
  mytype	= {CONFERENCE},
  abstract	= {Over the recent years aspect-oriented programming (AOP)
		  has found increasing interest among researchers in software
		  engineering. Aspects are abstractions which capture and
		  localise cross-cutting concerns. Although persistence has
		  been considered as an aspect of a system aspects in the
		  persistence domain in general and in databases in
		  particular have been largely ignored. This paper brings the
		  notion of aspects to object-oriented databases. Some
		  cross-cutting concerns are identified and addressed using
		  aspects. An aspect-oriented extension of an OODB is
		  discussed and various open issues pointed out.},
  language	= {English}
}

@InProceedings{	  rashid.sawyer.ea:flexible,
  author	= {Rashid, Awais and Sawyer, Pete and Pulverm{\"u}ller, Elke},
  title		= {{A} {F}lexible {A}pproach for {I}nstance {A}daptation
		  during {C}lass {V}ersioning.},
  booktitle	= {Proceedings of OODB: Symposium on Objects and Databases
		  (co-hosted with ECOOP 2000)},
  series	= {Lecture Notes in Computer Science (LNCS)},
  volume	= {1944},
  pages		= {101 -- 113},
  month		= {June},
  year		= {2000},
  publisher	= {Springer},
  location	= {Sophia Antipolis, France},
  mytype	= {CONFERENCE},
  abstract	= {One of the consequences of evolution can be the inability
		  to access objects created using the older schema definition
		  under the new definition and vice versa. Instance
		  adaptation is the conversion of objects to a compatible
		  definition or making objects exhibit a compatible
		  interface. Existing evolution approaches are committed to a
		  particular instance adaptation strategy. This is because
		  changes to the instance adaptation strategy or an attempt
		  to adopt an entirely different strategy would be very
		  costly. This paper proposes a flexible instance adaptation
		  approach for systems employing class versioning to manage
		  evolution. Flexibility is achieved by encapsulating the
		  instance adaptation code in aspects - abstractions
		  introduced by aspect-oriented programming to localise
		  cross-cutting concerns. This makes it possible to make
		  cost-effective changes to the instance adaptation strategy.
		  The flexibility of the approach is demonstrated by using
		  two instance adaptation strategies: error handlers and
		  update/backdate methods.},
  language	= {English}
}

@InProceedings{	  schonger.pulvermuller.ea:aspect-oriented,
  author	= {Schonger, Stefan and Pulverm{\"u}ller, Elke and Sarstedt,
		  Stefan},
  title		= {{A}spect-{O}riented {P}rogramming and {C}omponent
		  {W}eaving: {U}sing {XML} {R}epresentations of {A}bstract
		  {S}yntax {T}rees.},
  booktitle	= {Proceedings of the 2nd German GI Workshop on
		  Aspect-Oriented Software Development; - Technical Report
		  No. IAI-TR-2002-1},
  location	= {Bonn, Germany},
  month		= {February},
  year		= {2002},
  pages		= {59 -- 64},
  publisher	= {Rheinische Friedrich-Wilhelms-Universit{\"a}t Bonn,
		  Institut f{\"u}r Informatik III},
  mytype	= {WORKSHOP},
  abstract	= {Requirements that have a cross-cutting impact on software
		  present many problems for software development throughout
		  the lifecycle. Aspect Oriented Programming (AOP) and
		  related techniques propose solutions to this problem. These
		  language extensions are usually implemented by providing a
		  weaver that reimplements major parts of a compiler and thus
		  has a large code base. This paper proposes to define XML
		  ``operators'' and to work on XML representations of
		  abstract syntax trees (AST) for the base language that can
		  be generated by modifying a conventional compiler with
		  relative ease.},
  language	= {English},
  url_home	= {https://www.researchgate.net/profile/Pascal_Costanza/publication/2848664_Second_Workshop_on_Aspect-Oriented_Software_Development/links/56d408a708aefeb2d5276139.pdf#page=71}
}

@Article{	  speck.feja.ea:formalizing,
  author	= {Speck, Andreas and Feja, Sven and Witt, S{\"o}ren and
		  Pulverm{\"u}ller, Elke and Schulz, Marcel},
  title		= {Formalizing Business Process Specifications.},
  journal	= {Computer Science and Information Systems Journal (ComSIS),
		  Special Issue},
  volume	= {8},
  publisher	= {ComSIS Consortium},
  number	= {2},
  month		= {May},
  pages		= {427 -- 446},
  year		= {2011},
  mytype	= {JOURNAL},
  abstract	= {The behavior of commercial systems is described with
		  business process models. There are different notations and
		  formalism to express business processes. Many of these
		  notations such as BPMN or ARIS EPC models are widely used
		  in commercial projects. In the paper we focus on formalisms
		  to express rules and speciﬁcations for the business
		  processes. Temporal logic in general is a suitable
		  formalism to express rules for dynamic processes. CTL is
		  one kind of temporal logic focusing on branches and paths
		  in particular. With CTL it is possible to formulate rules
		  about different paths in business processes. Since the
		  textual formulae of CTL are not very suitable in the
		  development of commercial systems we introduce a graphical
		  notation (G-CTL) based on the business process notation
		  ARIS EPC. Moreover, we add to the CTL semantics
		  specializers to differentiate between the element types in
		  business process models and provide wildcards which allow
		  the user to check for unknown elements or elements with
		  only partially known properties.},
  language	= {English},
  url_home	= {http://dx.doi.org/10.2298/CSIS110111015S}
}

@Article{	  speck.pulvermuller.ea:component,
  author	= {Speck, Andreas and Pulverm{\"u}ller, Elke and Jerger,
		  Michael and Franczyk, Bogdan},
  title		= {{C}omponent {C}omposition {V}alidation.},
  journal	= {International Journal of Applied Mathematics and Computer
		  Science},
  year		= {2002},
  volume	= {12},
  number	= {4},
  pages		= {581 -- 589},
  month		= {December},
  mytype	= {JOURNAL},
  abstract	= {Many approaches such as component technologies have been
		  invented in order to support software reuse. Based on these
		  technologies a large variety of techniques have been
		  introduced to connect components. However, there is little
		  experience concerning the validation of component systems.
		  We know how to plug components together, but we do need
		  ways to check whether that works. In this paper we
		  introduce an approach to validating component compositions
		  and showing how such a process can be supported by tools.
		  We introduce a way to compare the interface specification
		  of components automatically against the code. Furthermore,
		  we demonstrate how compositions of components can be
		  specified by logical formulas, allowing us to automatically
		  validate these compositions.}
}

@TechReport{	  speck.pulvermuller.ea:model-based,
  author	= {Speck, Andreas and Pulverm{\"u}ller, Elke and Clau{\ss},
		  Matthias and Van Der Straeten, Ragnhild and Reussner, Ralf},
  title		= {{M}odel-{B}ased {S}oftware {R}euse - Proceedings.},
  month		= {September},
  year		= {2002},
  institution	= {Universit{\"a}t Karlsruhe, Fakult\"at f\"ur Informatik},
  number	= {2002-4},
  mytype	= {TECHNICALREPORT},
  abstract	= {This proceedings contains the contributions to the
		  Workshop on Model-Based Software Reuse, held in conjunction
		  with the 16th European Conference Object-Oriented
		  Programming (ECOOP) Malaga, Spain June 10, 2002. The
		  workshop was motivated by the observation that convenient
		  models are essential to understand the mechanisms of reuse.
		  Models may help to define the interoperability between
		  components, to detect feature interaction and to increase
		  the traceability. They have the potential to define the
		  essential aspects of the compositionality of the assets
		  (i.e., components, aspects, views, etc.). 11 contributions
		  give an overview about current research directions in the
		  field of model-based software reuse.},
  language	= {English},
  url_home	= {https://link.springer.com/chapter/10.1007/3-540-36208-8_11}
}

@InProceedings{	  speck.pulvermuller.ea:reusability,
  author	= {Speck, Andreas and Pulverm{\"u}ller, Elke and Mezini,
		  Mira},
  title		= {{R}eusability of {C}oncerns.},
  booktitle	= {Proceedings of the ADC Workshop 2000: Workshop on Aspects
		  and Dimensions of Concerns (in conjunction with ECOOP
		  2000)},
  month		= {June},
  year		= {2000},
  location	= {Sophia Antipolis, France},
  mytype	= {WORKSHOP},
  abstract	= {Various recent approaches aim at improving the application
		  of the separation of concerns principle by introducing new
		  system units. Although they seem to have the potential to
		  improve the system development process, additional
		  challenges evolve. This paper addresses some challenges
		  concerning the reusability of these new system units. Our
		  considerations about reusability are twofold. First, the
		  independence of these system units is regarded on the
		  mechanism level. Second, the composition validation problem
		  emerging from the composition of these new and also
		  reusable system units is investigated. The problems are
		  illustrated by means of two examples.},
  language	= {English},
  url_home	= {http://trese.cs.utwente.nl/Docs/workshops/adc2000/papers/Speck.pdf}
}

@InProceedings{	  speck.pulvermuller.ea:validation,
  author	= {Speck, Andreas and Pulverm{\"u}ller, Elke and Heuzeroth,
		  Dirk},
  title		= {{V}alidation of {B}usiness {P}rocess {M}odels},
  booktitle	= {Proceedings of the Workshop on Correctness of Model-Based
		  Software Composition (CMC); In Association with the 17th
		  European Conference on Object-Oriented Programming (ECOOP)
		  2003 - Report No. 2003-13},
  month		= {July},
  year		= {2003},
  pages		= {75 -- 83},
  location	= {Darmstadt, Germany},
  mytype	= {WORKSHOP},
  abstract	= {The eCommerce system development of Intershop is based on
		  different models on various levels of abstraction. The
		  software engineering tool ARIS represents most of these
		  models. In this paper we focus on the validation of the
		  business process models on an intermediate abstraction
		  level of the ARIS model. The business processes may be
		  derived from process patterns and have to follow specific
		  rules (best practices). The validation of the compliance
		  with these rules and the consistency with the original
		  business process pattern is the focus of this paper.},
  language	= {English},
  url_home	= {https://pdfs.semanticscholar.org/de0a/488398903c61d21038ab429182fe687131b9.pdf}
}

@InBook{	  speck.pulvermuller.ea:validierungstechniken,
  author	= {Speck, Andreas and Pulverm{\"u}ller, Elke and F{\"o}tsch,
		  Daniel and Feja, Sven},
  title		= {Validierungstechniken f{\"u}r Software. In: Integration
		  betrieblicher Informationssysteme: Problemanalysen und
		  L{\"o}sungsans{\"a}tze des Model-Driven Integration
		  Engineering, Leipziger Beitr{\"a}ge zur Informatik: Band IV.},
  subtitle	= {Leipziger Informatik Tage LIT 2006},
  xeditor	= {F{\"a}hnrich, K.-P. and K{\"u}hne, S. and Speck, A. and
		  Wagner, J.},
  pages		= {105 -- 122},
  year		= {2006},
  month		= {September},
  publisher	= {Leipziger Informatik Verbund (LIV)},
  language	= {German},
  mytype	= {CHAPTER},
  url_home	= {https://pdfs.semanticscholar.org/099f/dd1a8902e6307ef4ef065e0ef86cd2f25d3f.pdf}
}

@InProceedings{	  speck.pulvermuller.ea:versioning,
  author	= {Speck, Andreas and Pulverm{\"u}ller, Elke and Clau{\ss},
		  Matthias},
  title		= {{V}ersioning in {S}oftware {M}odeling.},
  booktitle	= {Proceedings of the 6th International Conference on
		  Integrated Design and Process Technology (IDPT 2002)},
  location	= {Pasadena, California, USA},
  month		= {June},
  year		= {2002},
  publisher	= {Society for Design and Process Science (SDPS)},
  mytype	= {CONFERENCE},
  abstract	= {Since the first discussion about the software crisis in
		  1968 many concepts in order to improve the software
		  development and reuse have been introduced. Some of them
		  like frameworks or components aim on the reuse of code
		  others capture experiences with system architecture, design
		  or coding recommendations. This paper focuses on a way to
		  express the reuse of pieces of software and design
		  reasoning. We apply versions in order to describe sets of
		  features we want to have in a system. Conditions are used
		  to formulate these requirements. Then these conditions are
		  integrated into UML models using the existing mechanisms
		  for extensions. This enables a tight integration of
		  versions and modeling constructs and enhances integrity of
		  models. The use of version is demonstrated by an example
		  from the eCommerce domain. This paper also discusses the
		  effects of the integration of version into UML models.},
  language	= {English},
  url_home	= {}
}

@InProceedings{	  speck.pulvermuller:component,
  author	= {Speck, Andreas and Pulverm{\"u}ller, Elke},
  title		= {{C}omponent {F}rameworks for {S}oftware {G}enerators.},
  booktitle	= {Proceedings of the 17th Workshop of the GI-Fachgruppe
		  2.1.4: \em{Programmiersprachen und Rechenkonzepte,
		  Schwerpunkt Softwarekomponenten}},
  editor	= {Goerigk, Wolfgang},
  series	= {Bericht Nr. 2007},
  pages		= {45 -- 53},
  month		= {July},
  year		= {2000},
  publisher	= {Institut f\"ur Informatik und Praktische Mathematik der
		  Christian-Albrechts-Universit\"at zu Kiel},
  location	= {Bad Honnef, Germany},
  mytype	= {WORKSHOP},
  language	= {English},
  url_home	= {http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.22.5468}
}

@InProceedings{	  speck.pulvermuller:feature,
  author	= {Speck, Andreas and Pulverm{\"u}ller, Elke},
  title		= {{F}eature {M}odeling.},
  booktitle	= {Proceedings of the Joint Workshop of the GI-Fachgruppe
		  2.1.4 (Programmiersprachen und Rechenkonzepte) and 2.1.9
		  (Objekt-Orientierte Softwareentwicklung) - Report No.
		  2018},
  pages		= {27 -- 32},
  institution	= {Christian-Albrechts-Universit{\"a}t zu Kiel},
  month		= {May},
  publisher	= {Christian-Albrechts-Universit{\"a}t zu Kiel},
  location	= {Bad Honnef},
  year		= {2001},
  mytype	= {WORKSHOP},
  abstract	= {Component-based approaches for the software development
		  are well-known. Most of these approaches (like CORBA and
		  COM++) focus on the realization of the connection between
		  the components and their interactions. In this paper we
		  concentrate on the missing items in the component-based
		  software engineering: the problem how to model component
		  composition and to validate them. We apply the component
		  model based on the interface description with InPorts and
		  OutPorts which allow a rather detailed definition of the
		  components interaction. Moreover we take the term feature
		  to name the core requirements to a component. Features are
		  used to drive the description of the component composition
		  which is regarded as an combination of features expressed
		  by logical operators. Moreover the InPorts and OutPorts
		  describe the dynamic component interactions. The
		  combination of OutPorts and InPorts according to the
		  component composition rules allows to reason about the
		  component system's dynamic behavior.},
  language	= {English},
  url_home	= {http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.10.9273}
}

@InProceedings{	  speck.pulvermuller:verification,
  author	= {Speck, Andreas and Pulverm{\"u}ller, Elke},
  title		= {Verification Support for Generative System Development.},
  booktitle	= {Proceedings of the 8th International Conference on New
		  Trends in Software Methodologies, Tools and Techniques
		  (SoMeT_09)},
  publisher	= {IOS Press},
  volume	= {199},
  month		= {September},
  year		= {2009},
  pages		= {131 -- 147},
  location	= {Prague, Czech Republic},
  mytype	= {CONFERENCE},
  abstract	= {The automated generation of systems (e.g. within
		  model-driven development) is a considerable improvement of
		  the software development. However, besides the automated
		  generation the verification of these generated systems
		  needs to be supported, too. By applying generators it is
		  not necessarily guaranteed that the generation outcome is
		  correct. Typical problems may be, firstly, the use of a
		  wrong operator resulting in an erroneous generation (static
		  aspects of the generation). Secondly, the interactions
		  between the different generated system assets (snippets) of
		  the generated outcome might be incorrect, since the
		  snippets might be connected in a wrong sequence (dynamic
		  aspect of the generation). Therefore, the hierarchical
		  dependencies of the snippets which are the input of the
		  generator as well as the dynamic behavior resulting from
		  the generation have to be checked. We describe the
		  hierarchy in a version model based on Boolean logic. The
		  temporal behavior may be checked by model checkers. For the
		  generation we apply our XOpT concept which provides
		  domain-specific transformation operators on the XML
		  representation. Besides the principles of the static and
		  dynamic elements of our checking approach the paper
		  presents the way to map program assets to the version model
		  and to finite state automata which are the prerequisite for
		  the checking. Though the proposed checking is presented at
		  the code level the approach may be applied to different
		  kinds of assets, e.g. also on the model level.},
  language	= {English},
  url_home	= {http://dl.acm.org/citation.cfm?id=1659320}
}

@InProceedings{	  speck.pulvermuller:versioning,
  author	= {Speck, Andreas and Pulverm{\"u}ller, Elke},
  title		= {Versioning in Software Engineering.},
  booktitle	= {Proceedings of the 27th Annual Conference of the IEEE
		  Industrial Electronics Society IES (IECON'01)},
  year		= {2001},
  publisher	= {IEEE Computer Society Press},
  pages		= {1856 -- 1861},
  location	= {Denver, CO},
  language	= {English},
  mytype	= {CONFERENCE},
  abstract	= {Software reuse usually has the drawback that the
		  documentation of the software units is rather incomplete
		  and inaccurate. It is hard to verify that such a component
		  offers both the required and promised features / behavior.
		  In this paper we present an approach to describe the
		  components' features and dynamic behavior as finite state
		  machines which may automatically be verified by model
		  checkers. The model of the component is derived from the
		  code providing consistency between documentation and
		  implementation. The models of several components may be
		  combined to larger systems (according to the composition of
		  the real code components). To deal with the state explosion
		  problem, our approach allows to "abstract" of the complete
		  component's behavior as needed (compression and inflation).
		  In the beginning of a reuse-based system development the
		  requirements are modeled similarly as the reusable code
		  assets. Model checking can be employed to determine the
		  consistency between these requirement models and the models
		  of the complete systems, subsystems or components. The tool
		  support eases incremental system development and rapid
		  prototyping / checking. The impact of a composed component
		  (the component's model respectively) may be instantly
		  examined (against the modeled requirements).},
  url_home	= {}
}

@InProceedings{	  speck.rashid.ea:individual,
  author	= {Speck, Andreas and Rashid, Awais and Pulverm{\"u}ller,
		  Elke and Chitchyan, Ruzanna},
  title		= {{I}ndividual {S}oftware {D}evelopment in {G}enerative
		  {P}rogramming.},
  booktitle	= {Collection of Abstracts of the 1st GCSE'99 Young
		  Researchers Workshop},
  month		= {September},
  year		= {1999},
  location	= {Erfurt, Germany},
  mytype	= {WORKSHOP},
  language	= {English},
  url_home	= {http://eprints.lancs.ac.uk/11740/}
}

@InProceedings{	  speck.robak.ea:version-based,
  author	= {Speck, Andreas and Robak, Silva and Pulverm{\"u}ller, Elke
		  and Clau{\ss}, Matthias},
  title		= {{V}ersion-based {A}pproach for {M}odelling {S}oftware
		  {S}ystems.},
  booktitle	= {Proceedings of the Workshop on Model-based Software Reuse;
		  In Association with the 16th European Conference on
		  Object-Oriented Programming (ECOOP) 2002 - Report No.
		  2002-4},
  month		= {June},
  year		= {2002},
  pages		= {15 -- 22},
  location	= {Malaga, Spain},
  mytype	= {WORKSHOP},
  language	= {English},
  url_home	= {}
}

@InProceedings{	  speck.witt.ea:framework,
  author	= {Speck, Andreas and Witt, S{\"o}ren and Feja, Sven and
		  Lotyzc, Aneta and Pulverm{\"u}ller, Elke},
  title		= {Framework for Business Process Verification.},
  booktitle	= {Proceedings of the 14th International Conference on
		  Business Information Systems (BIS 2011)},
  publisher	= {Springer LNBIP},
  volume	= {87, Part 2},
  month		= {June},
  year		= {2011},
  pages		= {50 -- 61},
  location	= {Poznan, Poland},
  mytype	= {CONFERENCE},
  abstract	= {There are numerous concepts and tools for modeling
		  business processes and several academic approaches to
		  verify business processes. However, most modeling tools
		  don’t integrate the checking of the processes. The
		  three-tier architecture of the Business Application Modeler
		  (BAM) provides the graphical representation of business
		  models and rules (presentation layer) as well as integrates
		  a veriﬁcation mechanism layer with an intermediate
		  transformation layer. The hierarchical architecture allows
		  to extend the checking system with additional features
		  supporting the use of the veriﬁer in an industrial
		  environment of commercial information system development.
		  Examples for such add-ons are the improved graphical rule
		  notation and an enhanced functionality of the veriﬁcation
		  system supporting the expressiveness in the business
		  modeling domain.},
  language	= {English},
  url_home	= {http://dx.doi.org/10.1007/978-3-642-21863-7_5}
}

@InProceedings{	  spieker.tecker.ea:fehlersuche,
  author	= {Spieker, Michael and Tecker, Pablo and Iyenghar, Padma and
		  Pulverm{\"u}ller, Elke and Westerkamp, Clemens and
		  W{\"u}bbelmann, J{\"u}rgen},
  title		= {Fehlersuche im Dreivierteltakt - Die Rhythmusanalyse des
		  Klavierspiels - Demo und Poster.},
  booktitle	= {Technologietag 2010},
  month		= {November},
  year		= {2010},
  location	= {Osnabr{\"u}ck, Germany},
  mytype	= {OTHER},
  abstract	= {Mit Hilfe grafischer Modellierung wird das Zeitverhalten
		  eines eingebetteten Systems, einem MIDI-Keyboard,
		  vorgestellt. Ziel ist die Fehlersuche im zeitlichen
		  Verhalten. Die vorgestellte Arbeit ist ein
		  Kooperationsprojekt mit der HS Osnabrück.},
  language	= {German},
  url_home	= {http://www.technologietag2010.de/Exponate-Details.26+M5a174e47d62.0.html}
}

@TechReport{	  van-der-straeten.speck.ea:correctness,
  author	= {Van Der Straeten, Ragnhild and Speck, Andreas and
		  Pulverm{\"u}ller, Elke and Clau{\ss}, Matthias and Pleuss,
		  Andreas},
  title		= {{C}orrectness of {M}odel-{B}ased {S}oftware {C}omposition
		  - {P}roceedings.},
  month		= {July},
  year		= {2003},
  institution	= {Universit{\"a}t Karlsruhe, Fakult\"at f\"ur Informatik},
  number	= {2003-13},
  mytype	= {TECHNICALREPORT},
  abstract	= {This proceedings contains the contributions to the
		  Workshop on Correctness of Model-based Software
		  Composition, held in conjunction with the 17th European
		  Conference on Object-Oriented Programming (ECOOP),
		  Darmstadt, Germany on July 22, 2003. While most events
		  concentrate on realisations of composition on the
		  technological level this workshop aims at closing the gap
		  of ensuring the intended composition result supported by
		  the usage of models.},
  language	= {English},
  url_home	= {https://publikationen.bibliothek.kit.edu/3142003/1533}
}
